数据结构 1，存储数据的集合 2，存储的数据之间有特殊关系

初阶数据结构 1，数组(Array)
           2，链表(Linked List) 链表三要素(元素 元素地址 指针)
           3,堆栈(Stack)
           4，队列(Queue)
           常用数据结构是线性结构

高阶数据结构 1，树(Tree) 2,集(Set) 3, 映射(Map) 4,图(Graph) 非线性结构

//git init  把一个文件夹变成git本地仓库
//git status
// git add(文件名) 把文件修改添加到暂存区
//git checkout -- Note.txt 撤销缓存区修改  git checkout其实是用版本库里的版本替换工作区的版本，无论工作区是修改还是删除，都可以“一键还原”。
// git commit（把add的代码提交到分支）把暂存区的所有内容添加到当前分支
//git log 提交日志
//git reset --Hard HEAD^ 回退上一个版本

git init
git add README.md
git commit -m "first commit"
git remote add origin git@github.com:zhengjingfeng/git.git
git push -u origin master

查看分支：git branch

创建分支：git branch <name>

切换分支：git checkout <name>

创建+切换分支：git checkout -b <name>

合并某分支到当前分支：git merge <name>

删除分支：git branch -d <name>

// git clone git branch git -- help(查看命令)
// git checkout(剪出分支)
//fork/clone(add commit push)

//网络请求开始
http 请求3位的返回码中 4开头代表客服端错误（404页面：file not found），5开头代表服务器错误，当然200是正常响应
cookie是客服端保持状态的方案 session是在服务端保持状态的方案

域名解析 --> 发起TCP的3次握手 --> 建立TCP连接后发起http请求 --> 服务器响应http请求，浏览器得到html代码 --> 浏览器解析html代码，并请求html代码中的资源（如js、css、图片等） --> 浏览器对页面进行渲染呈现给用户

//不同事件监听的优先级
1.onTouch返回true，则onTouchEvent和onClick都不会执行；
2.onTouch(onTouchListener)返回false，如果onTouchEvent不是返回super.onTouchEvent(event);
  也就算是说不管onTouchEvent返回true还是false，onClick(onCLickListener)都不会执行，
  这可以从super的源码看出（源码里会进行判断执行到OnCLickListener）,而且我们知道onClick执行也就会在触摸抬起(up)的时候执行；

//Android的UI操作是线程不安全的
线程安全：
多个线程访问时，采用枷锁的机制，当一个线程访问类的某个数据时，进行保护，其它线程不能访问，当前线程执行完毕后，其它线程才能访问。不会出现数据错乱不一致或数据污染
线程不安全：
不采用枷锁机制，多个线程可以同时访问，可能会造成多个线程都在修改数据造成所得到的数据是脏数据